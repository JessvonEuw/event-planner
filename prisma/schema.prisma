generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(uuid())
  name       String?
  email      String      @unique
  password   String
  role       Role        @default(USER)
  createdAt  DateTime    @default(now())
  userEvents UserEvent[]
  Event      Event[]
}

model Event {
  id          String      @id @default(cuid())
  title       String
  slug        String      @unique
  description String
  date        DateTime
  location    String
  notes       String?     @db.Text
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  guests      Guest[]
  userEvents  UserEvent[]
  User        User?       @relation(fields: [userId], references: [id])
  userId      String?

  @@index(slug)
}

model UserEvent {
  id      String        @id @default(uuid())
  userId  String        @map("user_id")
  user    User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  eventId String        @map("event_id")
  event   Event         @relation(fields: [eventId], references: [id])
  role    UserEventRole @default(CREATOR)
}

model Guest {
  id        String   @id @default(uuid())
  eventId   String   @map("event_id")
  event     Event    @relation(fields: [eventId], references: [id])
  name      String
  email     String?
  phone     String?
  attending Boolean  @default(false)
  notes     String?  @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

enum Role {
  ADMIN
  USER
}

enum UserEventRole {
  CREATOR
  ORGANIZER
}
